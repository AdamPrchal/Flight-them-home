09:06:11.403 [main] DEBUG Main - This is debug log
09:06:11.405 [main] INFO  Main - This is info log
09:06:11.405 [main] WARN  Main - This is warn log
09:06:11.406 [main] ERROR Main - This is error log
09:09:04.798 [main] DEBUG Exposed - SELECT VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME = 'MODE'
09:09:04.801 [main] WARN  Exposed - Transaction attempt #0 failed: org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT VALUE[*] FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME = 'MODE'"; expected "TOP, DISTINCT, ALL, ,, NOT, EXISTS, INTERSECTS, UNIQUE"; SQL statement:
SELECT VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME = 'MODE' [42001-202]. Statement(s): SELECT VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME = 'MODE'
org.jetbrains.exposed.exceptions.ExposedSQLException: org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT VALUE[*] FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME = 'MODE'"; expected "TOP, DISTINCT, ALL, ,, NOT, EXISTS, INTERSECTS, UNIQUE"; SQL statement:
SELECT VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME = 'MODE' [42001-202]
	at org.jetbrains.exposed.sql.statements.Statement.executeIn$exposed_core(Statement.kt:49)
	at org.jetbrains.exposed.sql.Transaction.exec(Transaction.kt:144)
	at org.jetbrains.exposed.sql.Transaction.exec(Transaction.kt:130)
	at org.jetbrains.exposed.sql.Transaction.exec(Transaction.kt:106)
	at org.jetbrains.exposed.sql.Transaction.exec$default(Transaction.kt:94)
	at org.jetbrains.exposed.sql.vendors.H2Dialect.isMySQLMode$exposed_core(H2.kt:121)
	at org.jetbrains.exposed.sql.vendors.H2Kt.isMySQLMode(H2.kt:8)
	at org.jetbrains.exposed.sql.vendors.H2Kt.access$isMySQLMode(H2.kt:1)
	at org.jetbrains.exposed.sql.vendors.H2Dialect.getName(H2.kt:131)
	at org.jetbrains.exposed.sql.statements.api.IdentifierManagerApi$keywords$2.invoke(IdentifierManagerApi.kt:16)
	at org.jetbrains.exposed.sql.statements.api.IdentifierManagerApi$keywords$2.invoke(IdentifierManagerApi.kt:16)
	at kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	at org.jetbrains.exposed.sql.statements.api.IdentifierManagerApi.getKeywords(IdentifierManagerApi.kt:16)
	at org.jetbrains.exposed.sql.statements.api.IdentifierManagerApi.needQuotes(IdentifierManagerApi.kt:41)
	at org.jetbrains.exposed.sql.statements.api.IdentifierManagerApi.quoteTokenIfNecessary(IdentifierManagerApi.kt:95)
	at org.jetbrains.exposed.sql.statements.api.IdentifierManagerApi.quoteIfNecessary(IdentifierManagerApi.kt:80)
	at org.jetbrains.exposed.sql.Transaction.identity(Transaction.kt:169)
	at org.jetbrains.exposed.sql.Table.createStatement(Table.kt:1029)
	at org.jetbrains.exposed.sql.Table.getDdl(Table.kt:1000)
	at org.jetbrains.exposed.sql.SchemaUtils.createStatements(SchemaUtils.kt:92)
	at org.jetbrains.exposed.sql.SchemaUtils.create(SchemaUtils.kt:233)
	at org.jetbrains.exposed.sql.SchemaUtils.create$default(SchemaUtils.kt:231)
	at MainKt$main$1.invoke(main.kt:50)
	at MainKt$main$1.invoke(main.kt:46)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.inTopLevelTransaction$run(ThreadLocalTransactionManager.kt:189)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.access$inTopLevelTransaction$run(ThreadLocalTransactionManager.kt:1)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt$inTopLevelTransaction$1.invoke(ThreadLocalTransactionManager.kt:215)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.keepAndRestoreTransactionRefAfterRun(ThreadLocalTransactionManager.kt:223)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.inTopLevelTransaction(ThreadLocalTransactionManager.kt:214)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt$transaction$1.invoke(ThreadLocalTransactionManager.kt:165)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.keepAndRestoreTransactionRefAfterRun(ThreadLocalTransactionManager.kt:223)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.transaction(ThreadLocalTransactionManager.kt:135)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.transaction(ThreadLocalTransactionManager.kt:132)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.transaction$default(ThreadLocalTransactionManager.kt:131)
	at MainKt.main(main.kt:46)
Caused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT VALUE[*] FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME = 'MODE'"; expected "TOP, DISTINCT, ALL, ,, NOT, EXISTS, INTERSECTS, UNIQUE"; SQL statement:
SELECT VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME = 'MODE' [42001-202]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.getSyntaxError(DbException.java:261)
	at org.h2.command.Parser.getSyntaxError(Parser.java:1286)
	at org.h2.command.Parser.readTerm(Parser.java:5513)
	at org.h2.command.Parser.readFactor(Parser.java:3726)
	at org.h2.command.Parser.readSum(Parser.java:3713)
	at org.h2.command.Parser.readConcat(Parser.java:3678)
	at org.h2.command.Parser.readCondition(Parser.java:3461)
	at org.h2.command.Parser.readExpression(Parser.java:3381)
	at org.h2.command.Parser.parseSelectExpressions(Parser.java:3196)
	at org.h2.command.Parser.parseSelect(Parser.java:3213)
	at org.h2.command.Parser.parseQuerySub(Parser.java:3092)
	at org.h2.command.Parser.parseSelectUnion(Parser.java:2930)
	at org.h2.command.Parser.parseQuery(Parser.java:2900)
	at org.h2.command.Parser.parsePrepared(Parser.java:1101)
	at org.h2.command.Parser.parse(Parser.java:1068)
	at org.h2.command.Parser.parse(Parser.java:1041)
	at org.h2.command.Parser.prepareCommand(Parser.java:965)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:614)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:552)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1111)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:92)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:1039)
	at org.jetbrains.exposed.sql.statements.jdbc.JdbcConnectionImpl.prepareStatement(JdbcConnectionImpl.kt:63)
	at org.jetbrains.exposed.sql.statements.Statement.prepared(Statement.kt:24)
	at org.jetbrains.exposed.sql.statements.Statement.executeIn$exposed_core(Statement.kt:47)
	... 34 common frames omitted
09:09:04.809 [main] DEBUG Exposed - SELECT VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME = 'MODE'
09:09:04.809 [main] WARN  Exposed - Transaction attempt #1 failed: org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT VALUE[*] FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME = 'MODE'"; expected "TOP, DISTINCT, ALL, ,, NOT, EXISTS, INTERSECTS, UNIQUE"; SQL statement:
SELECT VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME = 'MODE' [42001-202]. Statement(s): SELECT VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME = 'MODE'
org.jetbrains.exposed.exceptions.ExposedSQLException: org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT VALUE[*] FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME = 'MODE'"; expected "TOP, DISTINCT, ALL, ,, NOT, EXISTS, INTERSECTS, UNIQUE"; SQL statement:
SELECT VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME = 'MODE' [42001-202]
	at org.jetbrains.exposed.sql.statements.Statement.executeIn$exposed_core(Statement.kt:49)
	at org.jetbrains.exposed.sql.Transaction.exec(Transaction.kt:144)
	at org.jetbrains.exposed.sql.Transaction.exec(Transaction.kt:130)
	at org.jetbrains.exposed.sql.Transaction.exec(Transaction.kt:106)
	at org.jetbrains.exposed.sql.Transaction.exec$default(Transaction.kt:94)
	at org.jetbrains.exposed.sql.vendors.H2Dialect.isMySQLMode$exposed_core(H2.kt:121)
	at org.jetbrains.exposed.sql.vendors.H2Kt.isMySQLMode(H2.kt:8)
	at org.jetbrains.exposed.sql.vendors.H2Kt.access$isMySQLMode(H2.kt:1)
	at org.jetbrains.exposed.sql.vendors.H2Dialect.getName(H2.kt:131)
	at org.jetbrains.exposed.sql.statements.api.IdentifierManagerApi$keywords$2.invoke(IdentifierManagerApi.kt:16)
	at org.jetbrains.exposed.sql.statements.api.IdentifierManagerApi$keywords$2.invoke(IdentifierManagerApi.kt:16)
	at kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	at org.jetbrains.exposed.sql.statements.api.IdentifierManagerApi.getKeywords(IdentifierManagerApi.kt:16)
	at org.jetbrains.exposed.sql.statements.api.IdentifierManagerApi.needQuotes(IdentifierManagerApi.kt:41)
	at org.jetbrains.exposed.sql.statements.api.IdentifierManagerApi.quoteTokenIfNecessary(IdentifierManagerApi.kt:95)
	at org.jetbrains.exposed.sql.statements.api.IdentifierManagerApi.quoteIfNecessary(IdentifierManagerApi.kt:80)
	at org.jetbrains.exposed.sql.Transaction.identity(Transaction.kt:169)
	at org.jetbrains.exposed.sql.Table.createStatement(Table.kt:1029)
	at org.jetbrains.exposed.sql.Table.getDdl(Table.kt:1000)
	at org.jetbrains.exposed.sql.SchemaUtils.createStatements(SchemaUtils.kt:92)
	at org.jetbrains.exposed.sql.SchemaUtils.create(SchemaUtils.kt:233)
	at org.jetbrains.exposed.sql.SchemaUtils.create$default(SchemaUtils.kt:231)
	at MainKt$main$1.invoke(main.kt:50)
	at MainKt$main$1.invoke(main.kt:46)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.inTopLevelTransaction$run(ThreadLocalTransactionManager.kt:189)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.access$inTopLevelTransaction$run(ThreadLocalTransactionManager.kt:1)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt$inTopLevelTransaction$1.invoke(ThreadLocalTransactionManager.kt:215)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.keepAndRestoreTransactionRefAfterRun(ThreadLocalTransactionManager.kt:223)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.inTopLevelTransaction(ThreadLocalTransactionManager.kt:214)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt$transaction$1.invoke(ThreadLocalTransactionManager.kt:165)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.keepAndRestoreTransactionRefAfterRun(ThreadLocalTransactionManager.kt:223)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.transaction(ThreadLocalTransactionManager.kt:135)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.transaction(ThreadLocalTransactionManager.kt:132)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.transaction$default(ThreadLocalTransactionManager.kt:131)
	at MainKt.main(main.kt:46)
Caused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT VALUE[*] FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME = 'MODE'"; expected "TOP, DISTINCT, ALL, ,, NOT, EXISTS, INTERSECTS, UNIQUE"; SQL statement:
SELECT VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME = 'MODE' [42001-202]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.getSyntaxError(DbException.java:261)
	at org.h2.command.Parser.getSyntaxError(Parser.java:1286)
	at org.h2.command.Parser.readTerm(Parser.java:5513)
	at org.h2.command.Parser.readFactor(Parser.java:3726)
	at org.h2.command.Parser.readSum(Parser.java:3713)
	at org.h2.command.Parser.readConcat(Parser.java:3678)
	at org.h2.command.Parser.readCondition(Parser.java:3461)
	at org.h2.command.Parser.readExpression(Parser.java:3381)
	at org.h2.command.Parser.parseSelectExpressions(Parser.java:3196)
	at org.h2.command.Parser.parseSelect(Parser.java:3213)
	at org.h2.command.Parser.parseQuerySub(Parser.java:3092)
	at org.h2.command.Parser.parseSelectUnion(Parser.java:2930)
	at org.h2.command.Parser.parseQuery(Parser.java:2900)
	at org.h2.command.Parser.parsePrepared(Parser.java:1101)
	at org.h2.command.Parser.parse(Parser.java:1068)
	at org.h2.command.Parser.parse(Parser.java:1041)
	at org.h2.command.Parser.prepareCommand(Parser.java:965)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:614)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:552)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1111)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:92)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:1039)
	at org.jetbrains.exposed.sql.statements.jdbc.JdbcConnectionImpl.prepareStatement(JdbcConnectionImpl.kt:63)
	at org.jetbrains.exposed.sql.statements.Statement.prepared(Statement.kt:24)
	at org.jetbrains.exposed.sql.statements.Statement.executeIn$exposed_core(Statement.kt:47)
	... 34 common frames omitted
09:09:04.811 [main] DEBUG Exposed - SELECT VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME = 'MODE'
09:09:04.812 [main] WARN  Exposed - Transaction attempt #2 failed: org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT VALUE[*] FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME = 'MODE'"; expected "TOP, DISTINCT, ALL, ,, NOT, EXISTS, INTERSECTS, UNIQUE"; SQL statement:
SELECT VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME = 'MODE' [42001-202]. Statement(s): SELECT VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME = 'MODE'
org.jetbrains.exposed.exceptions.ExposedSQLException: org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT VALUE[*] FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME = 'MODE'"; expected "TOP, DISTINCT, ALL, ,, NOT, EXISTS, INTERSECTS, UNIQUE"; SQL statement:
SELECT VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME = 'MODE' [42001-202]
	at org.jetbrains.exposed.sql.statements.Statement.executeIn$exposed_core(Statement.kt:49)
	at org.jetbrains.exposed.sql.Transaction.exec(Transaction.kt:144)
	at org.jetbrains.exposed.sql.Transaction.exec(Transaction.kt:130)
	at org.jetbrains.exposed.sql.Transaction.exec(Transaction.kt:106)
	at org.jetbrains.exposed.sql.Transaction.exec$default(Transaction.kt:94)
	at org.jetbrains.exposed.sql.vendors.H2Dialect.isMySQLMode$exposed_core(H2.kt:121)
	at org.jetbrains.exposed.sql.vendors.H2Kt.isMySQLMode(H2.kt:8)
	at org.jetbrains.exposed.sql.vendors.H2Kt.access$isMySQLMode(H2.kt:1)
	at org.jetbrains.exposed.sql.vendors.H2Dialect.getName(H2.kt:131)
	at org.jetbrains.exposed.sql.statements.api.IdentifierManagerApi$keywords$2.invoke(IdentifierManagerApi.kt:16)
	at org.jetbrains.exposed.sql.statements.api.IdentifierManagerApi$keywords$2.invoke(IdentifierManagerApi.kt:16)
	at kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	at org.jetbrains.exposed.sql.statements.api.IdentifierManagerApi.getKeywords(IdentifierManagerApi.kt:16)
	at org.jetbrains.exposed.sql.statements.api.IdentifierManagerApi.needQuotes(IdentifierManagerApi.kt:41)
	at org.jetbrains.exposed.sql.statements.api.IdentifierManagerApi.quoteTokenIfNecessary(IdentifierManagerApi.kt:95)
	at org.jetbrains.exposed.sql.statements.api.IdentifierManagerApi.quoteIfNecessary(IdentifierManagerApi.kt:80)
	at org.jetbrains.exposed.sql.Transaction.identity(Transaction.kt:169)
	at org.jetbrains.exposed.sql.Table.createStatement(Table.kt:1029)
	at org.jetbrains.exposed.sql.Table.getDdl(Table.kt:1000)
	at org.jetbrains.exposed.sql.SchemaUtils.createStatements(SchemaUtils.kt:92)
	at org.jetbrains.exposed.sql.SchemaUtils.create(SchemaUtils.kt:233)
	at org.jetbrains.exposed.sql.SchemaUtils.create$default(SchemaUtils.kt:231)
	at MainKt$main$1.invoke(main.kt:50)
	at MainKt$main$1.invoke(main.kt:46)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.inTopLevelTransaction$run(ThreadLocalTransactionManager.kt:189)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.access$inTopLevelTransaction$run(ThreadLocalTransactionManager.kt:1)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt$inTopLevelTransaction$1.invoke(ThreadLocalTransactionManager.kt:215)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.keepAndRestoreTransactionRefAfterRun(ThreadLocalTransactionManager.kt:223)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.inTopLevelTransaction(ThreadLocalTransactionManager.kt:214)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt$transaction$1.invoke(ThreadLocalTransactionManager.kt:165)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.keepAndRestoreTransactionRefAfterRun(ThreadLocalTransactionManager.kt:223)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.transaction(ThreadLocalTransactionManager.kt:135)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.transaction(ThreadLocalTransactionManager.kt:132)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.transaction$default(ThreadLocalTransactionManager.kt:131)
	at MainKt.main(main.kt:46)
Caused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT VALUE[*] FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME = 'MODE'"; expected "TOP, DISTINCT, ALL, ,, NOT, EXISTS, INTERSECTS, UNIQUE"; SQL statement:
SELECT VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME = 'MODE' [42001-202]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.getSyntaxError(DbException.java:261)
	at org.h2.command.Parser.getSyntaxError(Parser.java:1286)
	at org.h2.command.Parser.readTerm(Parser.java:5513)
	at org.h2.command.Parser.readFactor(Parser.java:3726)
	at org.h2.command.Parser.readSum(Parser.java:3713)
	at org.h2.command.Parser.readConcat(Parser.java:3678)
	at org.h2.command.Parser.readCondition(Parser.java:3461)
	at org.h2.command.Parser.readExpression(Parser.java:3381)
	at org.h2.command.Parser.parseSelectExpressions(Parser.java:3196)
	at org.h2.command.Parser.parseSelect(Parser.java:3213)
	at org.h2.command.Parser.parseQuerySub(Parser.java:3092)
	at org.h2.command.Parser.parseSelectUnion(Parser.java:2930)
	at org.h2.command.Parser.parseQuery(Parser.java:2900)
	at org.h2.command.Parser.parsePrepared(Parser.java:1101)
	at org.h2.command.Parser.parse(Parser.java:1068)
	at org.h2.command.Parser.parse(Parser.java:1041)
	at org.h2.command.Parser.prepareCommand(Parser.java:965)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:614)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:552)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1111)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:92)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:1039)
	at org.jetbrains.exposed.sql.statements.jdbc.JdbcConnectionImpl.prepareStatement(JdbcConnectionImpl.kt:63)
	at org.jetbrains.exposed.sql.statements.Statement.prepared(Statement.kt:24)
	at org.jetbrains.exposed.sql.statements.Statement.executeIn$exposed_core(Statement.kt:47)
	... 34 common frames omitted
09:31:10.899 [main] WARN  Exposed - Transaction attempt #0 failed: path to '/db/data.sqlite': '/db' does not exist. Statement(s): null
java.sql.SQLException: path to '/db/data.sqlite': '/db' does not exist
	at org.sqlite.SQLiteConnection.open(SQLiteConnection.java:220)
	at org.sqlite.SQLiteConnection.<init>(SQLiteConnection.java:61)
	at org.sqlite.jdbc3.JDBC3Connection.<init>(JDBC3Connection.java:28)
	at org.sqlite.jdbc4.JDBC4Connection.<init>(JDBC4Connection.java:21)
	at org.sqlite.JDBC.createConnection(JDBC.java:115)
	at org.sqlite.JDBC.connect(JDBC.java:90)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:677)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:228)
	at org.jetbrains.exposed.sql.Database$Companion$connect$10.invoke(Database.kt:206)
	at org.jetbrains.exposed.sql.Database$Companion$connect$10.invoke(Database.kt:206)
	at org.jetbrains.exposed.sql.Database$Companion$doConnect$3.invoke(Database.kt:127)
	at org.jetbrains.exposed.sql.Database$Companion$doConnect$3.invoke(Database.kt:128)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManager$ThreadLocalTransaction$connectionLazy$1.invoke(ThreadLocalTransactionManager.kt:69)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManager$ThreadLocalTransaction$connectionLazy$1.invoke(ThreadLocalTransactionManager.kt:68)
	at kotlin.UnsafeLazyImpl.getValue(Lazy.kt:81)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManager$ThreadLocalTransaction.getConnection(ThreadLocalTransactionManager.kt:75)
	at org.jetbrains.exposed.sql.Transaction.getConnection(Transaction.kt)
	at org.jetbrains.exposed.sql.vendors.VendorDialect.tableExists(Default.kt:685)
	at org.jetbrains.exposed.sql.QueriesKt.exists(Queries.kt:236)
	at org.jetbrains.exposed.sql.SchemaUtils.createStatements(SchemaUtils.kt:89)
	at org.jetbrains.exposed.sql.SchemaUtils.create(SchemaUtils.kt:233)
	at org.jetbrains.exposed.sql.SchemaUtils.create$default(SchemaUtils.kt:231)
	at MainKt$main$1.invoke(main.kt:50)
	at MainKt$main$1.invoke(main.kt:46)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.inTopLevelTransaction$run(ThreadLocalTransactionManager.kt:189)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.access$inTopLevelTransaction$run(ThreadLocalTransactionManager.kt:1)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt$inTopLevelTransaction$1.invoke(ThreadLocalTransactionManager.kt:215)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.keepAndRestoreTransactionRefAfterRun(ThreadLocalTransactionManager.kt:223)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.inTopLevelTransaction(ThreadLocalTransactionManager.kt:214)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt$transaction$1.invoke(ThreadLocalTransactionManager.kt:165)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.keepAndRestoreTransactionRefAfterRun(ThreadLocalTransactionManager.kt:223)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.transaction(ThreadLocalTransactionManager.kt:135)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.transaction(ThreadLocalTransactionManager.kt:132)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.transaction$default(ThreadLocalTransactionManager.kt:131)
	at MainKt.main(main.kt:46)
09:31:10.908 [main] WARN  Exposed - Transaction attempt #1 failed: path to '/db/data.sqlite': '/db' does not exist. Statement(s): null
java.sql.SQLException: path to '/db/data.sqlite': '/db' does not exist
	at org.sqlite.SQLiteConnection.open(SQLiteConnection.java:220)
	at org.sqlite.SQLiteConnection.<init>(SQLiteConnection.java:61)
	at org.sqlite.jdbc3.JDBC3Connection.<init>(JDBC3Connection.java:28)
	at org.sqlite.jdbc4.JDBC4Connection.<init>(JDBC4Connection.java:21)
	at org.sqlite.JDBC.createConnection(JDBC.java:115)
	at org.sqlite.JDBC.connect(JDBC.java:90)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:677)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:228)
	at org.jetbrains.exposed.sql.Database$Companion$connect$10.invoke(Database.kt:206)
	at org.jetbrains.exposed.sql.Database$Companion$connect$10.invoke(Database.kt:206)
	at org.jetbrains.exposed.sql.Database$Companion$doConnect$3.invoke(Database.kt:127)
	at org.jetbrains.exposed.sql.Database$Companion$doConnect$3.invoke(Database.kt:128)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManager$ThreadLocalTransaction$connectionLazy$1.invoke(ThreadLocalTransactionManager.kt:69)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManager$ThreadLocalTransaction$connectionLazy$1.invoke(ThreadLocalTransactionManager.kt:68)
	at kotlin.UnsafeLazyImpl.getValue(Lazy.kt:81)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManager$ThreadLocalTransaction.getConnection(ThreadLocalTransactionManager.kt:75)
	at org.jetbrains.exposed.sql.Transaction.getConnection(Transaction.kt)
	at org.jetbrains.exposed.sql.vendors.VendorDialect.tableExists(Default.kt:685)
	at org.jetbrains.exposed.sql.QueriesKt.exists(Queries.kt:236)
	at org.jetbrains.exposed.sql.SchemaUtils.createStatements(SchemaUtils.kt:89)
	at org.jetbrains.exposed.sql.SchemaUtils.create(SchemaUtils.kt:233)
	at org.jetbrains.exposed.sql.SchemaUtils.create$default(SchemaUtils.kt:231)
	at MainKt$main$1.invoke(main.kt:50)
	at MainKt$main$1.invoke(main.kt:46)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.inTopLevelTransaction$run(ThreadLocalTransactionManager.kt:189)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.access$inTopLevelTransaction$run(ThreadLocalTransactionManager.kt:1)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt$inTopLevelTransaction$1.invoke(ThreadLocalTransactionManager.kt:215)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.keepAndRestoreTransactionRefAfterRun(ThreadLocalTransactionManager.kt:223)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.inTopLevelTransaction(ThreadLocalTransactionManager.kt:214)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt$transaction$1.invoke(ThreadLocalTransactionManager.kt:165)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.keepAndRestoreTransactionRefAfterRun(ThreadLocalTransactionManager.kt:223)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.transaction(ThreadLocalTransactionManager.kt:135)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.transaction(ThreadLocalTransactionManager.kt:132)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.transaction$default(ThreadLocalTransactionManager.kt:131)
	at MainKt.main(main.kt:46)
09:31:10.909 [main] WARN  Exposed - Transaction attempt #2 failed: path to '/db/data.sqlite': '/db' does not exist. Statement(s): null
java.sql.SQLException: path to '/db/data.sqlite': '/db' does not exist
	at org.sqlite.SQLiteConnection.open(SQLiteConnection.java:220)
	at org.sqlite.SQLiteConnection.<init>(SQLiteConnection.java:61)
	at org.sqlite.jdbc3.JDBC3Connection.<init>(JDBC3Connection.java:28)
	at org.sqlite.jdbc4.JDBC4Connection.<init>(JDBC4Connection.java:21)
	at org.sqlite.JDBC.createConnection(JDBC.java:115)
	at org.sqlite.JDBC.connect(JDBC.java:90)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:677)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:228)
	at org.jetbrains.exposed.sql.Database$Companion$connect$10.invoke(Database.kt:206)
	at org.jetbrains.exposed.sql.Database$Companion$connect$10.invoke(Database.kt:206)
	at org.jetbrains.exposed.sql.Database$Companion$doConnect$3.invoke(Database.kt:127)
	at org.jetbrains.exposed.sql.Database$Companion$doConnect$3.invoke(Database.kt:128)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManager$ThreadLocalTransaction$connectionLazy$1.invoke(ThreadLocalTransactionManager.kt:69)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManager$ThreadLocalTransaction$connectionLazy$1.invoke(ThreadLocalTransactionManager.kt:68)
	at kotlin.UnsafeLazyImpl.getValue(Lazy.kt:81)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManager$ThreadLocalTransaction.getConnection(ThreadLocalTransactionManager.kt:75)
	at org.jetbrains.exposed.sql.Transaction.getConnection(Transaction.kt)
	at org.jetbrains.exposed.sql.vendors.VendorDialect.tableExists(Default.kt:685)
	at org.jetbrains.exposed.sql.QueriesKt.exists(Queries.kt:236)
	at org.jetbrains.exposed.sql.SchemaUtils.createStatements(SchemaUtils.kt:89)
	at org.jetbrains.exposed.sql.SchemaUtils.create(SchemaUtils.kt:233)
	at org.jetbrains.exposed.sql.SchemaUtils.create$default(SchemaUtils.kt:231)
	at MainKt$main$1.invoke(main.kt:50)
	at MainKt$main$1.invoke(main.kt:46)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.inTopLevelTransaction$run(ThreadLocalTransactionManager.kt:189)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.access$inTopLevelTransaction$run(ThreadLocalTransactionManager.kt:1)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt$inTopLevelTransaction$1.invoke(ThreadLocalTransactionManager.kt:215)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.keepAndRestoreTransactionRefAfterRun(ThreadLocalTransactionManager.kt:223)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.inTopLevelTransaction(ThreadLocalTransactionManager.kt:214)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt$transaction$1.invoke(ThreadLocalTransactionManager.kt:165)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.keepAndRestoreTransactionRefAfterRun(ThreadLocalTransactionManager.kt:223)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.transaction(ThreadLocalTransactionManager.kt:135)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.transaction(ThreadLocalTransactionManager.kt:132)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.transaction$default(ThreadLocalTransactionManager.kt:131)
	at MainKt.main(main.kt:46)
09:31:42.468 [main] DEBUG Exposed - CREATE TABLE IF NOT EXISTS Cities (id INTEGER PRIMARY KEY AUTOINCREMENT, "name" VARCHAR(50) NOT NULL)
09:31:42.493 [main] DEBUG Exposed - INSERT INTO Cities ("name") VALUES ('St. Petersburg')
09:35:13.389 [main] WARN  Exposed - Transaction attempt #0 failed: A file path that is implicitly relative to the current working directory is not allowed in the database URL "jdbc:h2:db/h2db". Use an absolute path, ~/name, ./name, or the baseDir setting instead. [90011-202]. Statement(s): null
org.h2.jdbc.JdbcSQLNonTransientConnectionException: A file path that is implicitly relative to the current working directory is not allowed in the database URL "jdbc:h2:db/h2db". Use an absolute path, ~/name, ./name, or the baseDir setting instead. [90011-202]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:678)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.engine.ConnectionInfo.getName(ConnectionInfo.java:464)
	at org.h2.engine.Engine.openSession(Engine.java:49)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:342)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:117)
	at org.h2.Driver.connect(Driver.java:59)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:677)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:228)
	at org.jetbrains.exposed.sql.Database$Companion$connect$10.invoke(Database.kt:206)
	at org.jetbrains.exposed.sql.Database$Companion$connect$10.invoke(Database.kt:206)
	at org.jetbrains.exposed.sql.Database$Companion$doConnect$3.invoke(Database.kt:127)
	at org.jetbrains.exposed.sql.Database$Companion$doConnect$3.invoke(Database.kt:128)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManager$ThreadLocalTransaction$connectionLazy$1.invoke(ThreadLocalTransactionManager.kt:69)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManager$ThreadLocalTransaction$connectionLazy$1.invoke(ThreadLocalTransactionManager.kt:68)
	at kotlin.UnsafeLazyImpl.getValue(Lazy.kt:81)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManager$ThreadLocalTransaction.getConnection(ThreadLocalTransactionManager.kt:75)
	at org.jetbrains.exposed.sql.Transaction.getConnection(Transaction.kt)
	at org.jetbrains.exposed.sql.vendors.VendorDialect.tableExists(Default.kt:685)
	at org.jetbrains.exposed.sql.QueriesKt.exists(Queries.kt:236)
	at org.jetbrains.exposed.sql.SchemaUtils.createStatements(SchemaUtils.kt:89)
	at org.jetbrains.exposed.sql.SchemaUtils.create(SchemaUtils.kt:233)
	at org.jetbrains.exposed.sql.SchemaUtils.create$default(SchemaUtils.kt:231)
	at MainKt$main$1.invoke(main.kt:50)
	at MainKt$main$1.invoke(main.kt:46)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.inTopLevelTransaction$run(ThreadLocalTransactionManager.kt:189)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.access$inTopLevelTransaction$run(ThreadLocalTransactionManager.kt:1)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt$inTopLevelTransaction$1.invoke(ThreadLocalTransactionManager.kt:215)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.keepAndRestoreTransactionRefAfterRun(ThreadLocalTransactionManager.kt:223)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.inTopLevelTransaction(ThreadLocalTransactionManager.kt:214)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt$transaction$1.invoke(ThreadLocalTransactionManager.kt:165)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.keepAndRestoreTransactionRefAfterRun(ThreadLocalTransactionManager.kt:223)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.transaction(ThreadLocalTransactionManager.kt:135)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.transaction(ThreadLocalTransactionManager.kt:132)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.transaction$default(ThreadLocalTransactionManager.kt:131)
	at MainKt.main(main.kt:46)
09:35:13.397 [main] WARN  Exposed - Transaction attempt #1 failed: A file path that is implicitly relative to the current working directory is not allowed in the database URL "jdbc:h2:db/h2db". Use an absolute path, ~/name, ./name, or the baseDir setting instead. [90011-202]. Statement(s): null
org.h2.jdbc.JdbcSQLNonTransientConnectionException: A file path that is implicitly relative to the current working directory is not allowed in the database URL "jdbc:h2:db/h2db". Use an absolute path, ~/name, ./name, or the baseDir setting instead. [90011-202]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:678)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.engine.ConnectionInfo.getName(ConnectionInfo.java:464)
	at org.h2.engine.Engine.openSession(Engine.java:49)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:342)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:117)
	at org.h2.Driver.connect(Driver.java:59)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:677)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:228)
	at org.jetbrains.exposed.sql.Database$Companion$connect$10.invoke(Database.kt:206)
	at org.jetbrains.exposed.sql.Database$Companion$connect$10.invoke(Database.kt:206)
	at org.jetbrains.exposed.sql.Database$Companion$doConnect$3.invoke(Database.kt:127)
	at org.jetbrains.exposed.sql.Database$Companion$doConnect$3.invoke(Database.kt:128)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManager$ThreadLocalTransaction$connectionLazy$1.invoke(ThreadLocalTransactionManager.kt:69)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManager$ThreadLocalTransaction$connectionLazy$1.invoke(ThreadLocalTransactionManager.kt:68)
	at kotlin.UnsafeLazyImpl.getValue(Lazy.kt:81)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManager$ThreadLocalTransaction.getConnection(ThreadLocalTransactionManager.kt:75)
	at org.jetbrains.exposed.sql.Transaction.getConnection(Transaction.kt)
	at org.jetbrains.exposed.sql.vendors.VendorDialect.tableExists(Default.kt:685)
	at org.jetbrains.exposed.sql.QueriesKt.exists(Queries.kt:236)
	at org.jetbrains.exposed.sql.SchemaUtils.createStatements(SchemaUtils.kt:89)
	at org.jetbrains.exposed.sql.SchemaUtils.create(SchemaUtils.kt:233)
	at org.jetbrains.exposed.sql.SchemaUtils.create$default(SchemaUtils.kt:231)
	at MainKt$main$1.invoke(main.kt:50)
	at MainKt$main$1.invoke(main.kt:46)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.inTopLevelTransaction$run(ThreadLocalTransactionManager.kt:189)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.access$inTopLevelTransaction$run(ThreadLocalTransactionManager.kt:1)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt$inTopLevelTransaction$1.invoke(ThreadLocalTransactionManager.kt:215)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.keepAndRestoreTransactionRefAfterRun(ThreadLocalTransactionManager.kt:223)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.inTopLevelTransaction(ThreadLocalTransactionManager.kt:214)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt$transaction$1.invoke(ThreadLocalTransactionManager.kt:165)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.keepAndRestoreTransactionRefAfterRun(ThreadLocalTransactionManager.kt:223)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.transaction(ThreadLocalTransactionManager.kt:135)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.transaction(ThreadLocalTransactionManager.kt:132)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.transaction$default(ThreadLocalTransactionManager.kt:131)
	at MainKt.main(main.kt:46)
09:35:13.398 [main] WARN  Exposed - Transaction attempt #2 failed: A file path that is implicitly relative to the current working directory is not allowed in the database URL "jdbc:h2:db/h2db". Use an absolute path, ~/name, ./name, or the baseDir setting instead. [90011-202]. Statement(s): null
org.h2.jdbc.JdbcSQLNonTransientConnectionException: A file path that is implicitly relative to the current working directory is not allowed in the database URL "jdbc:h2:db/h2db". Use an absolute path, ~/name, ./name, or the baseDir setting instead. [90011-202]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:678)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.engine.ConnectionInfo.getName(ConnectionInfo.java:464)
	at org.h2.engine.Engine.openSession(Engine.java:49)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:342)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:117)
	at org.h2.Driver.connect(Driver.java:59)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:677)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:228)
	at org.jetbrains.exposed.sql.Database$Companion$connect$10.invoke(Database.kt:206)
	at org.jetbrains.exposed.sql.Database$Companion$connect$10.invoke(Database.kt:206)
	at org.jetbrains.exposed.sql.Database$Companion$doConnect$3.invoke(Database.kt:127)
	at org.jetbrains.exposed.sql.Database$Companion$doConnect$3.invoke(Database.kt:128)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManager$ThreadLocalTransaction$connectionLazy$1.invoke(ThreadLocalTransactionManager.kt:69)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManager$ThreadLocalTransaction$connectionLazy$1.invoke(ThreadLocalTransactionManager.kt:68)
	at kotlin.UnsafeLazyImpl.getValue(Lazy.kt:81)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManager$ThreadLocalTransaction.getConnection(ThreadLocalTransactionManager.kt:75)
	at org.jetbrains.exposed.sql.Transaction.getConnection(Transaction.kt)
	at org.jetbrains.exposed.sql.vendors.VendorDialect.tableExists(Default.kt:685)
	at org.jetbrains.exposed.sql.QueriesKt.exists(Queries.kt:236)
	at org.jetbrains.exposed.sql.SchemaUtils.createStatements(SchemaUtils.kt:89)
	at org.jetbrains.exposed.sql.SchemaUtils.create(SchemaUtils.kt:233)
	at org.jetbrains.exposed.sql.SchemaUtils.create$default(SchemaUtils.kt:231)
	at MainKt$main$1.invoke(main.kt:50)
	at MainKt$main$1.invoke(main.kt:46)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.inTopLevelTransaction$run(ThreadLocalTransactionManager.kt:189)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.access$inTopLevelTransaction$run(ThreadLocalTransactionManager.kt:1)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt$inTopLevelTransaction$1.invoke(ThreadLocalTransactionManager.kt:215)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.keepAndRestoreTransactionRefAfterRun(ThreadLocalTransactionManager.kt:223)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.inTopLevelTransaction(ThreadLocalTransactionManager.kt:214)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt$transaction$1.invoke(ThreadLocalTransactionManager.kt:165)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.keepAndRestoreTransactionRefAfterRun(ThreadLocalTransactionManager.kt:223)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.transaction(ThreadLocalTransactionManager.kt:135)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.transaction(ThreadLocalTransactionManager.kt:132)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.transaction$default(ThreadLocalTransactionManager.kt:131)
	at MainKt.main(main.kt:46)
09:36:32.751 [main] DEBUG Exposed - SELECT VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME = 'MODE'
09:36:32.754 [main] WARN  Exposed - Transaction attempt #0 failed: org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT VALUE[*] FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME = 'MODE'"; expected "TOP, DISTINCT, ALL, ,, NOT, EXISTS, INTERSECTS, UNIQUE"; SQL statement:
SELECT VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME = 'MODE' [42001-202]. Statement(s): SELECT VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME = 'MODE'
org.jetbrains.exposed.exceptions.ExposedSQLException: org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT VALUE[*] FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME = 'MODE'"; expected "TOP, DISTINCT, ALL, ,, NOT, EXISTS, INTERSECTS, UNIQUE"; SQL statement:
SELECT VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME = 'MODE' [42001-202]
	at org.jetbrains.exposed.sql.statements.Statement.executeIn$exposed_core(Statement.kt:49)
	at org.jetbrains.exposed.sql.Transaction.exec(Transaction.kt:144)
	at org.jetbrains.exposed.sql.Transaction.exec(Transaction.kt:130)
	at org.jetbrains.exposed.sql.Transaction.exec(Transaction.kt:106)
	at org.jetbrains.exposed.sql.Transaction.exec$default(Transaction.kt:94)
	at org.jetbrains.exposed.sql.vendors.H2Dialect.isMySQLMode$exposed_core(H2.kt:121)
	at org.jetbrains.exposed.sql.vendors.H2Kt.isMySQLMode(H2.kt:8)
	at org.jetbrains.exposed.sql.vendors.H2Kt.access$isMySQLMode(H2.kt:1)
	at org.jetbrains.exposed.sql.vendors.H2Dialect.getName(H2.kt:131)
	at org.jetbrains.exposed.sql.statements.api.IdentifierManagerApi$keywords$2.invoke(IdentifierManagerApi.kt:16)
	at org.jetbrains.exposed.sql.statements.api.IdentifierManagerApi$keywords$2.invoke(IdentifierManagerApi.kt:16)
	at kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	at org.jetbrains.exposed.sql.statements.api.IdentifierManagerApi.getKeywords(IdentifierManagerApi.kt:16)
	at org.jetbrains.exposed.sql.statements.api.IdentifierManagerApi.needQuotes(IdentifierManagerApi.kt:41)
	at org.jetbrains.exposed.sql.statements.api.IdentifierManagerApi.quoteTokenIfNecessary(IdentifierManagerApi.kt:95)
	at org.jetbrains.exposed.sql.statements.api.IdentifierManagerApi.quoteIfNecessary(IdentifierManagerApi.kt:80)
	at org.jetbrains.exposed.sql.Transaction.identity(Transaction.kt:169)
	at org.jetbrains.exposed.sql.Table.createStatement(Table.kt:1029)
	at org.jetbrains.exposed.sql.Table.getDdl(Table.kt:1000)
	at org.jetbrains.exposed.sql.SchemaUtils.createStatements(SchemaUtils.kt:92)
	at org.jetbrains.exposed.sql.SchemaUtils.create(SchemaUtils.kt:233)
	at org.jetbrains.exposed.sql.SchemaUtils.create$default(SchemaUtils.kt:231)
	at MainKt$main$1.invoke(main.kt:50)
	at MainKt$main$1.invoke(main.kt:46)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.inTopLevelTransaction$run(ThreadLocalTransactionManager.kt:189)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.access$inTopLevelTransaction$run(ThreadLocalTransactionManager.kt:1)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt$inTopLevelTransaction$1.invoke(ThreadLocalTransactionManager.kt:215)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.keepAndRestoreTransactionRefAfterRun(ThreadLocalTransactionManager.kt:223)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.inTopLevelTransaction(ThreadLocalTransactionManager.kt:214)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt$transaction$1.invoke(ThreadLocalTransactionManager.kt:165)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.keepAndRestoreTransactionRefAfterRun(ThreadLocalTransactionManager.kt:223)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.transaction(ThreadLocalTransactionManager.kt:135)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.transaction(ThreadLocalTransactionManager.kt:132)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.transaction$default(ThreadLocalTransactionManager.kt:131)
	at MainKt.main(main.kt:46)
Caused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT VALUE[*] FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME = 'MODE'"; expected "TOP, DISTINCT, ALL, ,, NOT, EXISTS, INTERSECTS, UNIQUE"; SQL statement:
SELECT VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME = 'MODE' [42001-202]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.getSyntaxError(DbException.java:261)
	at org.h2.command.Parser.getSyntaxError(Parser.java:1286)
	at org.h2.command.Parser.readTerm(Parser.java:5513)
	at org.h2.command.Parser.readFactor(Parser.java:3726)
	at org.h2.command.Parser.readSum(Parser.java:3713)
	at org.h2.command.Parser.readConcat(Parser.java:3678)
	at org.h2.command.Parser.readCondition(Parser.java:3461)
	at org.h2.command.Parser.readExpression(Parser.java:3381)
	at org.h2.command.Parser.parseSelectExpressions(Parser.java:3196)
	at org.h2.command.Parser.parseSelect(Parser.java:3213)
	at org.h2.command.Parser.parseQuerySub(Parser.java:3092)
	at org.h2.command.Parser.parseSelectUnion(Parser.java:2930)
	at org.h2.command.Parser.parseQuery(Parser.java:2900)
	at org.h2.command.Parser.parsePrepared(Parser.java:1101)
	at org.h2.command.Parser.parse(Parser.java:1068)
	at org.h2.command.Parser.parse(Parser.java:1041)
	at org.h2.command.Parser.prepareCommand(Parser.java:965)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:614)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:552)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1111)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:92)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:1039)
	at org.jetbrains.exposed.sql.statements.jdbc.JdbcConnectionImpl.prepareStatement(JdbcConnectionImpl.kt:63)
	at org.jetbrains.exposed.sql.statements.Statement.prepared(Statement.kt:24)
	at org.jetbrains.exposed.sql.statements.Statement.executeIn$exposed_core(Statement.kt:47)
	... 34 common frames omitted
09:36:32.819 [main] DEBUG Exposed - SELECT VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME = 'MODE'
09:36:32.820 [main] WARN  Exposed - Transaction attempt #1 failed: org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT VALUE[*] FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME = 'MODE'"; expected "TOP, DISTINCT, ALL, ,, NOT, EXISTS, INTERSECTS, UNIQUE"; SQL statement:
SELECT VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME = 'MODE' [42001-202]. Statement(s): SELECT VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME = 'MODE'
org.jetbrains.exposed.exceptions.ExposedSQLException: org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT VALUE[*] FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME = 'MODE'"; expected "TOP, DISTINCT, ALL, ,, NOT, EXISTS, INTERSECTS, UNIQUE"; SQL statement:
SELECT VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME = 'MODE' [42001-202]
	at org.jetbrains.exposed.sql.statements.Statement.executeIn$exposed_core(Statement.kt:49)
	at org.jetbrains.exposed.sql.Transaction.exec(Transaction.kt:144)
	at org.jetbrains.exposed.sql.Transaction.exec(Transaction.kt:130)
	at org.jetbrains.exposed.sql.Transaction.exec(Transaction.kt:106)
	at org.jetbrains.exposed.sql.Transaction.exec$default(Transaction.kt:94)
	at org.jetbrains.exposed.sql.vendors.H2Dialect.isMySQLMode$exposed_core(H2.kt:121)
	at org.jetbrains.exposed.sql.vendors.H2Kt.isMySQLMode(H2.kt:8)
	at org.jetbrains.exposed.sql.vendors.H2Kt.access$isMySQLMode(H2.kt:1)
	at org.jetbrains.exposed.sql.vendors.H2Dialect.getName(H2.kt:131)
	at org.jetbrains.exposed.sql.statements.api.IdentifierManagerApi$keywords$2.invoke(IdentifierManagerApi.kt:16)
	at org.jetbrains.exposed.sql.statements.api.IdentifierManagerApi$keywords$2.invoke(IdentifierManagerApi.kt:16)
	at kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	at org.jetbrains.exposed.sql.statements.api.IdentifierManagerApi.getKeywords(IdentifierManagerApi.kt:16)
	at org.jetbrains.exposed.sql.statements.api.IdentifierManagerApi.needQuotes(IdentifierManagerApi.kt:41)
	at org.jetbrains.exposed.sql.statements.api.IdentifierManagerApi.quoteTokenIfNecessary(IdentifierManagerApi.kt:95)
	at org.jetbrains.exposed.sql.statements.api.IdentifierManagerApi.quoteIfNecessary(IdentifierManagerApi.kt:80)
	at org.jetbrains.exposed.sql.Transaction.identity(Transaction.kt:169)
	at org.jetbrains.exposed.sql.Table.createStatement(Table.kt:1029)
	at org.jetbrains.exposed.sql.Table.getDdl(Table.kt:1000)
	at org.jetbrains.exposed.sql.SchemaUtils.createStatements(SchemaUtils.kt:92)
	at org.jetbrains.exposed.sql.SchemaUtils.create(SchemaUtils.kt:233)
	at org.jetbrains.exposed.sql.SchemaUtils.create$default(SchemaUtils.kt:231)
	at MainKt$main$1.invoke(main.kt:50)
	at MainKt$main$1.invoke(main.kt:46)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.inTopLevelTransaction$run(ThreadLocalTransactionManager.kt:189)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.access$inTopLevelTransaction$run(ThreadLocalTransactionManager.kt:1)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt$inTopLevelTransaction$1.invoke(ThreadLocalTransactionManager.kt:215)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.keepAndRestoreTransactionRefAfterRun(ThreadLocalTransactionManager.kt:223)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.inTopLevelTransaction(ThreadLocalTransactionManager.kt:214)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt$transaction$1.invoke(ThreadLocalTransactionManager.kt:165)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.keepAndRestoreTransactionRefAfterRun(ThreadLocalTransactionManager.kt:223)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.transaction(ThreadLocalTransactionManager.kt:135)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.transaction(ThreadLocalTransactionManager.kt:132)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.transaction$default(ThreadLocalTransactionManager.kt:131)
	at MainKt.main(main.kt:46)
Caused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT VALUE[*] FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME = 'MODE'"; expected "TOP, DISTINCT, ALL, ,, NOT, EXISTS, INTERSECTS, UNIQUE"; SQL statement:
SELECT VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME = 'MODE' [42001-202]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.getSyntaxError(DbException.java:261)
	at org.h2.command.Parser.getSyntaxError(Parser.java:1286)
	at org.h2.command.Parser.readTerm(Parser.java:5513)
	at org.h2.command.Parser.readFactor(Parser.java:3726)
	at org.h2.command.Parser.readSum(Parser.java:3713)
	at org.h2.command.Parser.readConcat(Parser.java:3678)
	at org.h2.command.Parser.readCondition(Parser.java:3461)
	at org.h2.command.Parser.readExpression(Parser.java:3381)
	at org.h2.command.Parser.parseSelectExpressions(Parser.java:3196)
	at org.h2.command.Parser.parseSelect(Parser.java:3213)
	at org.h2.command.Parser.parseQuerySub(Parser.java:3092)
	at org.h2.command.Parser.parseSelectUnion(Parser.java:2930)
	at org.h2.command.Parser.parseQuery(Parser.java:2900)
	at org.h2.command.Parser.parsePrepared(Parser.java:1101)
	at org.h2.command.Parser.parse(Parser.java:1068)
	at org.h2.command.Parser.parse(Parser.java:1041)
	at org.h2.command.Parser.prepareCommand(Parser.java:965)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:614)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:552)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1111)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:92)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:1039)
	at org.jetbrains.exposed.sql.statements.jdbc.JdbcConnectionImpl.prepareStatement(JdbcConnectionImpl.kt:63)
	at org.jetbrains.exposed.sql.statements.Statement.prepared(Statement.kt:24)
	at org.jetbrains.exposed.sql.statements.Statement.executeIn$exposed_core(Statement.kt:47)
	... 34 common frames omitted
09:36:32.868 [main] DEBUG Exposed - SELECT VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME = 'MODE'
09:36:32.868 [main] WARN  Exposed - Transaction attempt #2 failed: org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT VALUE[*] FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME = 'MODE'"; expected "TOP, DISTINCT, ALL, ,, NOT, EXISTS, INTERSECTS, UNIQUE"; SQL statement:
SELECT VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME = 'MODE' [42001-202]. Statement(s): SELECT VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME = 'MODE'
org.jetbrains.exposed.exceptions.ExposedSQLException: org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT VALUE[*] FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME = 'MODE'"; expected "TOP, DISTINCT, ALL, ,, NOT, EXISTS, INTERSECTS, UNIQUE"; SQL statement:
SELECT VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME = 'MODE' [42001-202]
	at org.jetbrains.exposed.sql.statements.Statement.executeIn$exposed_core(Statement.kt:49)
	at org.jetbrains.exposed.sql.Transaction.exec(Transaction.kt:144)
	at org.jetbrains.exposed.sql.Transaction.exec(Transaction.kt:130)
	at org.jetbrains.exposed.sql.Transaction.exec(Transaction.kt:106)
	at org.jetbrains.exposed.sql.Transaction.exec$default(Transaction.kt:94)
	at org.jetbrains.exposed.sql.vendors.H2Dialect.isMySQLMode$exposed_core(H2.kt:121)
	at org.jetbrains.exposed.sql.vendors.H2Kt.isMySQLMode(H2.kt:8)
	at org.jetbrains.exposed.sql.vendors.H2Kt.access$isMySQLMode(H2.kt:1)
	at org.jetbrains.exposed.sql.vendors.H2Dialect.getName(H2.kt:131)
	at org.jetbrains.exposed.sql.statements.api.IdentifierManagerApi$keywords$2.invoke(IdentifierManagerApi.kt:16)
	at org.jetbrains.exposed.sql.statements.api.IdentifierManagerApi$keywords$2.invoke(IdentifierManagerApi.kt:16)
	at kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	at org.jetbrains.exposed.sql.statements.api.IdentifierManagerApi.getKeywords(IdentifierManagerApi.kt:16)
	at org.jetbrains.exposed.sql.statements.api.IdentifierManagerApi.needQuotes(IdentifierManagerApi.kt:41)
	at org.jetbrains.exposed.sql.statements.api.IdentifierManagerApi.quoteTokenIfNecessary(IdentifierManagerApi.kt:95)
	at org.jetbrains.exposed.sql.statements.api.IdentifierManagerApi.quoteIfNecessary(IdentifierManagerApi.kt:80)
	at org.jetbrains.exposed.sql.Transaction.identity(Transaction.kt:169)
	at org.jetbrains.exposed.sql.Table.createStatement(Table.kt:1029)
	at org.jetbrains.exposed.sql.Table.getDdl(Table.kt:1000)
	at org.jetbrains.exposed.sql.SchemaUtils.createStatements(SchemaUtils.kt:92)
	at org.jetbrains.exposed.sql.SchemaUtils.create(SchemaUtils.kt:233)
	at org.jetbrains.exposed.sql.SchemaUtils.create$default(SchemaUtils.kt:231)
	at MainKt$main$1.invoke(main.kt:50)
	at MainKt$main$1.invoke(main.kt:46)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.inTopLevelTransaction$run(ThreadLocalTransactionManager.kt:189)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.access$inTopLevelTransaction$run(ThreadLocalTransactionManager.kt:1)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt$inTopLevelTransaction$1.invoke(ThreadLocalTransactionManager.kt:215)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.keepAndRestoreTransactionRefAfterRun(ThreadLocalTransactionManager.kt:223)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.inTopLevelTransaction(ThreadLocalTransactionManager.kt:214)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt$transaction$1.invoke(ThreadLocalTransactionManager.kt:165)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.keepAndRestoreTransactionRefAfterRun(ThreadLocalTransactionManager.kt:223)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.transaction(ThreadLocalTransactionManager.kt:135)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.transaction(ThreadLocalTransactionManager.kt:132)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.transaction$default(ThreadLocalTransactionManager.kt:131)
	at MainKt.main(main.kt:46)
Caused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT VALUE[*] FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME = 'MODE'"; expected "TOP, DISTINCT, ALL, ,, NOT, EXISTS, INTERSECTS, UNIQUE"; SQL statement:
SELECT VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME = 'MODE' [42001-202]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.getSyntaxError(DbException.java:261)
	at org.h2.command.Parser.getSyntaxError(Parser.java:1286)
	at org.h2.command.Parser.readTerm(Parser.java:5513)
	at org.h2.command.Parser.readFactor(Parser.java:3726)
	at org.h2.command.Parser.readSum(Parser.java:3713)
	at org.h2.command.Parser.readConcat(Parser.java:3678)
	at org.h2.command.Parser.readCondition(Parser.java:3461)
	at org.h2.command.Parser.readExpression(Parser.java:3381)
	at org.h2.command.Parser.parseSelectExpressions(Parser.java:3196)
	at org.h2.command.Parser.parseSelect(Parser.java:3213)
	at org.h2.command.Parser.parseQuerySub(Parser.java:3092)
	at org.h2.command.Parser.parseSelectUnion(Parser.java:2930)
	at org.h2.command.Parser.parseQuery(Parser.java:2900)
	at org.h2.command.Parser.parsePrepared(Parser.java:1101)
	at org.h2.command.Parser.parse(Parser.java:1068)
	at org.h2.command.Parser.parse(Parser.java:1041)
	at org.h2.command.Parser.prepareCommand(Parser.java:965)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:614)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:552)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1111)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:92)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:1039)
	at org.jetbrains.exposed.sql.statements.jdbc.JdbcConnectionImpl.prepareStatement(JdbcConnectionImpl.kt:63)
	at org.jetbrains.exposed.sql.statements.Statement.prepared(Statement.kt:24)
	at org.jetbrains.exposed.sql.statements.Statement.executeIn$exposed_core(Statement.kt:47)
	... 34 common frames omitted
09:37:53.190 [main] WARN  Exposed - Transaction attempt #0 failed: File corrupted while reading record: null. Possible solution: use the recovery tool [90030-199]. Statement(s): null
org.h2.jdbc.JdbcSQLNonTransientConnectionException: File corrupted while reading record: null. Possible solution: use the recovery tool [90030-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:617)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.mvstore.db.MVTableEngine$Store.convertIllegalStateException(MVTableEngine.java:205)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:173)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:95)
	at org.h2.engine.Database.getPageStore(Database.java:2739)
	at org.h2.engine.Database.open(Database.java:769)
	at org.h2.engine.Database.openDatabase(Database.java:319)
	at org.h2.engine.Database.<init>(Database.java:313)
	at org.h2.engine.Engine.openSession(Engine.java:69)
	at org.h2.engine.Engine.openSession(Engine.java:201)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:178)
	at org.h2.engine.Engine.createSession(Engine.java:161)
	at org.h2.engine.Engine.createSession(Engine.java:31)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:336)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:169)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:148)
	at org.h2.Driver.connect(Driver.java:69)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:677)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:228)
	at org.jetbrains.exposed.sql.Database$Companion$connect$10.invoke(Database.kt:206)
	at org.jetbrains.exposed.sql.Database$Companion$connect$10.invoke(Database.kt:206)
	at org.jetbrains.exposed.sql.Database$Companion$doConnect$3.invoke(Database.kt:127)
	at org.jetbrains.exposed.sql.Database$Companion$doConnect$3.invoke(Database.kt:128)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManager$ThreadLocalTransaction$connectionLazy$1.invoke(ThreadLocalTransactionManager.kt:69)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManager$ThreadLocalTransaction$connectionLazy$1.invoke(ThreadLocalTransactionManager.kt:68)
	at kotlin.UnsafeLazyImpl.getValue(Lazy.kt:81)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManager$ThreadLocalTransaction.getConnection(ThreadLocalTransactionManager.kt:75)
	at org.jetbrains.exposed.sql.Transaction.getConnection(Transaction.kt)
	at org.jetbrains.exposed.sql.vendors.VendorDialect.tableExists(Default.kt:685)
	at org.jetbrains.exposed.sql.QueriesKt.exists(Queries.kt:236)
	at org.jetbrains.exposed.sql.SchemaUtils.createStatements(SchemaUtils.kt:89)
	at org.jetbrains.exposed.sql.SchemaUtils.create(SchemaUtils.kt:233)
	at org.jetbrains.exposed.sql.SchemaUtils.create$default(SchemaUtils.kt:231)
	at MainKt$main$1.invoke(main.kt:50)
	at MainKt$main$1.invoke(main.kt:46)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.inTopLevelTransaction$run(ThreadLocalTransactionManager.kt:189)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.access$inTopLevelTransaction$run(ThreadLocalTransactionManager.kt:1)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt$inTopLevelTransaction$1.invoke(ThreadLocalTransactionManager.kt:215)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.keepAndRestoreTransactionRefAfterRun(ThreadLocalTransactionManager.kt:223)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.inTopLevelTransaction(ThreadLocalTransactionManager.kt:214)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt$transaction$1.invoke(ThreadLocalTransactionManager.kt:165)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.keepAndRestoreTransactionRefAfterRun(ThreadLocalTransactionManager.kt:223)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.transaction(ThreadLocalTransactionManager.kt:135)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.transaction(ThreadLocalTransactionManager.kt:132)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.transaction$default(ThreadLocalTransactionManager.kt:131)
	at MainKt.main(main.kt:46)
Caused by: java.lang.IllegalStateException: The write format 2 is larger than the supported format 1, and the file was not opened in read-only mode [1.4.199/5]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:883)
	at org.h2.mvstore.MVStore.readStoreHeader(MVStore.java:705)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:401)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:3343)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:162)
	... 43 common frames omitted
09:37:53.201 [main] WARN  Exposed - Transaction attempt #1 failed: File corrupted while reading record: null. Possible solution: use the recovery tool [90030-199]. Statement(s): null
org.h2.jdbc.JdbcSQLNonTransientConnectionException: File corrupted while reading record: null. Possible solution: use the recovery tool [90030-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:617)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.mvstore.db.MVTableEngine$Store.convertIllegalStateException(MVTableEngine.java:205)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:173)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:95)
	at org.h2.engine.Database.getPageStore(Database.java:2739)
	at org.h2.engine.Database.open(Database.java:769)
	at org.h2.engine.Database.openDatabase(Database.java:319)
	at org.h2.engine.Database.<init>(Database.java:313)
	at org.h2.engine.Engine.openSession(Engine.java:69)
	at org.h2.engine.Engine.openSession(Engine.java:201)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:178)
	at org.h2.engine.Engine.createSession(Engine.java:161)
	at org.h2.engine.Engine.createSession(Engine.java:31)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:336)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:169)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:148)
	at org.h2.Driver.connect(Driver.java:69)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:677)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:228)
	at org.jetbrains.exposed.sql.Database$Companion$connect$10.invoke(Database.kt:206)
	at org.jetbrains.exposed.sql.Database$Companion$connect$10.invoke(Database.kt:206)
	at org.jetbrains.exposed.sql.Database$Companion$doConnect$3.invoke(Database.kt:127)
	at org.jetbrains.exposed.sql.Database$Companion$doConnect$3.invoke(Database.kt:128)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManager$ThreadLocalTransaction$connectionLazy$1.invoke(ThreadLocalTransactionManager.kt:69)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManager$ThreadLocalTransaction$connectionLazy$1.invoke(ThreadLocalTransactionManager.kt:68)
	at kotlin.UnsafeLazyImpl.getValue(Lazy.kt:81)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManager$ThreadLocalTransaction.getConnection(ThreadLocalTransactionManager.kt:75)
	at org.jetbrains.exposed.sql.Transaction.getConnection(Transaction.kt)
	at org.jetbrains.exposed.sql.vendors.VendorDialect.tableExists(Default.kt:685)
	at org.jetbrains.exposed.sql.QueriesKt.exists(Queries.kt:236)
	at org.jetbrains.exposed.sql.SchemaUtils.createStatements(SchemaUtils.kt:89)
	at org.jetbrains.exposed.sql.SchemaUtils.create(SchemaUtils.kt:233)
	at org.jetbrains.exposed.sql.SchemaUtils.create$default(SchemaUtils.kt:231)
	at MainKt$main$1.invoke(main.kt:50)
	at MainKt$main$1.invoke(main.kt:46)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.inTopLevelTransaction$run(ThreadLocalTransactionManager.kt:189)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.access$inTopLevelTransaction$run(ThreadLocalTransactionManager.kt:1)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt$inTopLevelTransaction$1.invoke(ThreadLocalTransactionManager.kt:215)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.keepAndRestoreTransactionRefAfterRun(ThreadLocalTransactionManager.kt:223)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.inTopLevelTransaction(ThreadLocalTransactionManager.kt:214)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt$transaction$1.invoke(ThreadLocalTransactionManager.kt:165)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.keepAndRestoreTransactionRefAfterRun(ThreadLocalTransactionManager.kt:223)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.transaction(ThreadLocalTransactionManager.kt:135)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.transaction(ThreadLocalTransactionManager.kt:132)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.transaction$default(ThreadLocalTransactionManager.kt:131)
	at MainKt.main(main.kt:46)
Caused by: java.lang.IllegalStateException: The write format 2 is larger than the supported format 1, and the file was not opened in read-only mode [1.4.199/5]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:883)
	at org.h2.mvstore.MVStore.readStoreHeader(MVStore.java:705)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:401)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:3343)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:162)
	... 43 common frames omitted
09:37:53.206 [main] WARN  Exposed - Transaction attempt #2 failed: File corrupted while reading record: null. Possible solution: use the recovery tool [90030-199]. Statement(s): null
org.h2.jdbc.JdbcSQLNonTransientConnectionException: File corrupted while reading record: null. Possible solution: use the recovery tool [90030-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:617)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.mvstore.db.MVTableEngine$Store.convertIllegalStateException(MVTableEngine.java:205)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:173)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:95)
	at org.h2.engine.Database.getPageStore(Database.java:2739)
	at org.h2.engine.Database.open(Database.java:769)
	at org.h2.engine.Database.openDatabase(Database.java:319)
	at org.h2.engine.Database.<init>(Database.java:313)
	at org.h2.engine.Engine.openSession(Engine.java:69)
	at org.h2.engine.Engine.openSession(Engine.java:201)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:178)
	at org.h2.engine.Engine.createSession(Engine.java:161)
	at org.h2.engine.Engine.createSession(Engine.java:31)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:336)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:169)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:148)
	at org.h2.Driver.connect(Driver.java:69)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:677)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:228)
	at org.jetbrains.exposed.sql.Database$Companion$connect$10.invoke(Database.kt:206)
	at org.jetbrains.exposed.sql.Database$Companion$connect$10.invoke(Database.kt:206)
	at org.jetbrains.exposed.sql.Database$Companion$doConnect$3.invoke(Database.kt:127)
	at org.jetbrains.exposed.sql.Database$Companion$doConnect$3.invoke(Database.kt:128)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManager$ThreadLocalTransaction$connectionLazy$1.invoke(ThreadLocalTransactionManager.kt:69)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManager$ThreadLocalTransaction$connectionLazy$1.invoke(ThreadLocalTransactionManager.kt:68)
	at kotlin.UnsafeLazyImpl.getValue(Lazy.kt:81)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManager$ThreadLocalTransaction.getConnection(ThreadLocalTransactionManager.kt:75)
	at org.jetbrains.exposed.sql.Transaction.getConnection(Transaction.kt)
	at org.jetbrains.exposed.sql.vendors.VendorDialect.tableExists(Default.kt:685)
	at org.jetbrains.exposed.sql.QueriesKt.exists(Queries.kt:236)
	at org.jetbrains.exposed.sql.SchemaUtils.createStatements(SchemaUtils.kt:89)
	at org.jetbrains.exposed.sql.SchemaUtils.create(SchemaUtils.kt:233)
	at org.jetbrains.exposed.sql.SchemaUtils.create$default(SchemaUtils.kt:231)
	at MainKt$main$1.invoke(main.kt:50)
	at MainKt$main$1.invoke(main.kt:46)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.inTopLevelTransaction$run(ThreadLocalTransactionManager.kt:189)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.access$inTopLevelTransaction$run(ThreadLocalTransactionManager.kt:1)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt$inTopLevelTransaction$1.invoke(ThreadLocalTransactionManager.kt:215)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.keepAndRestoreTransactionRefAfterRun(ThreadLocalTransactionManager.kt:223)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.inTopLevelTransaction(ThreadLocalTransactionManager.kt:214)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt$transaction$1.invoke(ThreadLocalTransactionManager.kt:165)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.keepAndRestoreTransactionRefAfterRun(ThreadLocalTransactionManager.kt:223)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.transaction(ThreadLocalTransactionManager.kt:135)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.transaction(ThreadLocalTransactionManager.kt:132)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.transaction$default(ThreadLocalTransactionManager.kt:131)
	at MainKt.main(main.kt:46)
Caused by: java.lang.IllegalStateException: The write format 2 is larger than the supported format 1, and the file was not opened in read-only mode [1.4.199/5]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:883)
	at org.h2.mvstore.MVStore.readStoreHeader(MVStore.java:705)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:401)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:3343)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:162)
	... 43 common frames omitted
09:39:01.644 [main] WARN  Exposed - Transaction attempt #0 failed: File corrupted while reading record: null. Possible solution: use the recovery tool [90030-200]. Statement(s): null
org.h2.jdbc.JdbcSQLNonTransientConnectionException: File corrupted while reading record: null. Possible solution: use the recovery tool [90030-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.mvstore.db.MVTableEngine$Store.convertIllegalStateException(MVTableEngine.java:222)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:182)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:103)
	at org.h2.engine.Database.getPageStore(Database.java:2659)
	at org.h2.engine.Database.open(Database.java:675)
	at org.h2.engine.Database.openDatabase(Database.java:307)
	at org.h2.engine.Database.<init>(Database.java:301)
	at org.h2.engine.Engine.openSession(Engine.java:74)
	at org.h2.engine.Engine.openSession(Engine.java:192)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:171)
	at org.h2.engine.Engine.createSession(Engine.java:166)
	at org.h2.engine.Engine.createSession(Engine.java:29)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:340)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:173)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:677)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:228)
	at org.jetbrains.exposed.sql.Database$Companion$connect$10.invoke(Database.kt:206)
	at org.jetbrains.exposed.sql.Database$Companion$connect$10.invoke(Database.kt:206)
	at org.jetbrains.exposed.sql.Database$Companion$doConnect$3.invoke(Database.kt:127)
	at org.jetbrains.exposed.sql.Database$Companion$doConnect$3.invoke(Database.kt:128)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManager$ThreadLocalTransaction$connectionLazy$1.invoke(ThreadLocalTransactionManager.kt:69)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManager$ThreadLocalTransaction$connectionLazy$1.invoke(ThreadLocalTransactionManager.kt:68)
	at kotlin.UnsafeLazyImpl.getValue(Lazy.kt:81)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManager$ThreadLocalTransaction.getConnection(ThreadLocalTransactionManager.kt:75)
	at org.jetbrains.exposed.sql.Transaction.getConnection(Transaction.kt)
	at org.jetbrains.exposed.sql.vendors.VendorDialect.tableExists(Default.kt:685)
	at org.jetbrains.exposed.sql.QueriesKt.exists(Queries.kt:236)
	at org.jetbrains.exposed.sql.SchemaUtils.createStatements(SchemaUtils.kt:89)
	at org.jetbrains.exposed.sql.SchemaUtils.create(SchemaUtils.kt:233)
	at org.jetbrains.exposed.sql.SchemaUtils.create$default(SchemaUtils.kt:231)
	at MainKt$main$1.invoke(main.kt:50)
	at MainKt$main$1.invoke(main.kt:46)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.inTopLevelTransaction$run(ThreadLocalTransactionManager.kt:189)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.access$inTopLevelTransaction$run(ThreadLocalTransactionManager.kt:1)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt$inTopLevelTransaction$1.invoke(ThreadLocalTransactionManager.kt:215)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.keepAndRestoreTransactionRefAfterRun(ThreadLocalTransactionManager.kt:223)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.inTopLevelTransaction(ThreadLocalTransactionManager.kt:214)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt$transaction$1.invoke(ThreadLocalTransactionManager.kt:165)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.keepAndRestoreTransactionRefAfterRun(ThreadLocalTransactionManager.kt:223)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.transaction(ThreadLocalTransactionManager.kt:135)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.transaction(ThreadLocalTransactionManager.kt:132)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.transaction$default(ThreadLocalTransactionManager.kt:131)
	at MainKt.main(main.kt:46)
Caused by: java.lang.IllegalStateException: The write format 2 is larger than the supported format 1, and the file was not opened in read-only mode [1.4.200/5]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:950)
	at org.h2.mvstore.MVStore.readStoreHeader(MVStore.java:741)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:396)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:3579)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:170)
	... 43 common frames omitted
09:39:01.656 [main] WARN  Exposed - Transaction attempt #1 failed: File corrupted while reading record: null. Possible solution: use the recovery tool [90030-200]. Statement(s): null
org.h2.jdbc.JdbcSQLNonTransientConnectionException: File corrupted while reading record: null. Possible solution: use the recovery tool [90030-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.mvstore.db.MVTableEngine$Store.convertIllegalStateException(MVTableEngine.java:222)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:182)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:103)
	at org.h2.engine.Database.getPageStore(Database.java:2659)
	at org.h2.engine.Database.open(Database.java:675)
	at org.h2.engine.Database.openDatabase(Database.java:307)
	at org.h2.engine.Database.<init>(Database.java:301)
	at org.h2.engine.Engine.openSession(Engine.java:74)
	at org.h2.engine.Engine.openSession(Engine.java:192)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:171)
	at org.h2.engine.Engine.createSession(Engine.java:166)
	at org.h2.engine.Engine.createSession(Engine.java:29)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:340)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:173)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:677)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:228)
	at org.jetbrains.exposed.sql.Database$Companion$connect$10.invoke(Database.kt:206)
	at org.jetbrains.exposed.sql.Database$Companion$connect$10.invoke(Database.kt:206)
	at org.jetbrains.exposed.sql.Database$Companion$doConnect$3.invoke(Database.kt:127)
	at org.jetbrains.exposed.sql.Database$Companion$doConnect$3.invoke(Database.kt:128)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManager$ThreadLocalTransaction$connectionLazy$1.invoke(ThreadLocalTransactionManager.kt:69)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManager$ThreadLocalTransaction$connectionLazy$1.invoke(ThreadLocalTransactionManager.kt:68)
	at kotlin.UnsafeLazyImpl.getValue(Lazy.kt:81)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManager$ThreadLocalTransaction.getConnection(ThreadLocalTransactionManager.kt:75)
	at org.jetbrains.exposed.sql.Transaction.getConnection(Transaction.kt)
	at org.jetbrains.exposed.sql.vendors.VendorDialect.tableExists(Default.kt:685)
	at org.jetbrains.exposed.sql.QueriesKt.exists(Queries.kt:236)
	at org.jetbrains.exposed.sql.SchemaUtils.createStatements(SchemaUtils.kt:89)
	at org.jetbrains.exposed.sql.SchemaUtils.create(SchemaUtils.kt:233)
	at org.jetbrains.exposed.sql.SchemaUtils.create$default(SchemaUtils.kt:231)
	at MainKt$main$1.invoke(main.kt:50)
	at MainKt$main$1.invoke(main.kt:46)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.inTopLevelTransaction$run(ThreadLocalTransactionManager.kt:189)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.access$inTopLevelTransaction$run(ThreadLocalTransactionManager.kt:1)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt$inTopLevelTransaction$1.invoke(ThreadLocalTransactionManager.kt:215)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.keepAndRestoreTransactionRefAfterRun(ThreadLocalTransactionManager.kt:223)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.inTopLevelTransaction(ThreadLocalTransactionManager.kt:214)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt$transaction$1.invoke(ThreadLocalTransactionManager.kt:165)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.keepAndRestoreTransactionRefAfterRun(ThreadLocalTransactionManager.kt:223)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.transaction(ThreadLocalTransactionManager.kt:135)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.transaction(ThreadLocalTransactionManager.kt:132)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.transaction$default(ThreadLocalTransactionManager.kt:131)
	at MainKt.main(main.kt:46)
Caused by: java.lang.IllegalStateException: The write format 2 is larger than the supported format 1, and the file was not opened in read-only mode [1.4.200/5]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:950)
	at org.h2.mvstore.MVStore.readStoreHeader(MVStore.java:741)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:396)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:3579)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:170)
	... 43 common frames omitted
09:39:01.660 [main] WARN  Exposed - Transaction attempt #2 failed: File corrupted while reading record: null. Possible solution: use the recovery tool [90030-200]. Statement(s): null
org.h2.jdbc.JdbcSQLNonTransientConnectionException: File corrupted while reading record: null. Possible solution: use the recovery tool [90030-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.mvstore.db.MVTableEngine$Store.convertIllegalStateException(MVTableEngine.java:222)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:182)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:103)
	at org.h2.engine.Database.getPageStore(Database.java:2659)
	at org.h2.engine.Database.open(Database.java:675)
	at org.h2.engine.Database.openDatabase(Database.java:307)
	at org.h2.engine.Database.<init>(Database.java:301)
	at org.h2.engine.Engine.openSession(Engine.java:74)
	at org.h2.engine.Engine.openSession(Engine.java:192)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:171)
	at org.h2.engine.Engine.createSession(Engine.java:166)
	at org.h2.engine.Engine.createSession(Engine.java:29)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:340)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:173)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:677)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:228)
	at org.jetbrains.exposed.sql.Database$Companion$connect$10.invoke(Database.kt:206)
	at org.jetbrains.exposed.sql.Database$Companion$connect$10.invoke(Database.kt:206)
	at org.jetbrains.exposed.sql.Database$Companion$doConnect$3.invoke(Database.kt:127)
	at org.jetbrains.exposed.sql.Database$Companion$doConnect$3.invoke(Database.kt:128)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManager$ThreadLocalTransaction$connectionLazy$1.invoke(ThreadLocalTransactionManager.kt:69)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManager$ThreadLocalTransaction$connectionLazy$1.invoke(ThreadLocalTransactionManager.kt:68)
	at kotlin.UnsafeLazyImpl.getValue(Lazy.kt:81)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManager$ThreadLocalTransaction.getConnection(ThreadLocalTransactionManager.kt:75)
	at org.jetbrains.exposed.sql.Transaction.getConnection(Transaction.kt)
	at org.jetbrains.exposed.sql.vendors.VendorDialect.tableExists(Default.kt:685)
	at org.jetbrains.exposed.sql.QueriesKt.exists(Queries.kt:236)
	at org.jetbrains.exposed.sql.SchemaUtils.createStatements(SchemaUtils.kt:89)
	at org.jetbrains.exposed.sql.SchemaUtils.create(SchemaUtils.kt:233)
	at org.jetbrains.exposed.sql.SchemaUtils.create$default(SchemaUtils.kt:231)
	at MainKt$main$1.invoke(main.kt:50)
	at MainKt$main$1.invoke(main.kt:46)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.inTopLevelTransaction$run(ThreadLocalTransactionManager.kt:189)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.access$inTopLevelTransaction$run(ThreadLocalTransactionManager.kt:1)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt$inTopLevelTransaction$1.invoke(ThreadLocalTransactionManager.kt:215)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.keepAndRestoreTransactionRefAfterRun(ThreadLocalTransactionManager.kt:223)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.inTopLevelTransaction(ThreadLocalTransactionManager.kt:214)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt$transaction$1.invoke(ThreadLocalTransactionManager.kt:165)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.keepAndRestoreTransactionRefAfterRun(ThreadLocalTransactionManager.kt:223)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.transaction(ThreadLocalTransactionManager.kt:135)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.transaction(ThreadLocalTransactionManager.kt:132)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.transaction$default(ThreadLocalTransactionManager.kt:131)
	at MainKt.main(main.kt:46)
Caused by: java.lang.IllegalStateException: The write format 2 is larger than the supported format 1, and the file was not opened in read-only mode [1.4.200/5]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:950)
	at org.h2.mvstore.MVStore.readStoreHeader(MVStore.java:741)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:396)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:3579)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:170)
	... 43 common frames omitted
09:39:33.417 [main] WARN  Exposed - Transaction attempt #0 failed: File corrupted while reading record: null. Possible solution: use the recovery tool [90030-200]. Statement(s): null
org.h2.jdbc.JdbcSQLNonTransientConnectionException: File corrupted while reading record: null. Possible solution: use the recovery tool [90030-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.mvstore.db.MVTableEngine$Store.convertIllegalStateException(MVTableEngine.java:222)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:182)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:103)
	at org.h2.engine.Database.getPageStore(Database.java:2659)
	at org.h2.engine.Database.open(Database.java:675)
	at org.h2.engine.Database.openDatabase(Database.java:307)
	at org.h2.engine.Database.<init>(Database.java:301)
	at org.h2.engine.Engine.openSession(Engine.java:74)
	at org.h2.engine.Engine.openSession(Engine.java:192)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:171)
	at org.h2.engine.Engine.createSession(Engine.java:166)
	at org.h2.engine.Engine.createSession(Engine.java:29)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:340)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:173)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:677)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:228)
	at org.jetbrains.exposed.sql.Database$Companion$connect$10.invoke(Database.kt:206)
	at org.jetbrains.exposed.sql.Database$Companion$connect$10.invoke(Database.kt:206)
	at org.jetbrains.exposed.sql.Database$Companion$doConnect$3.invoke(Database.kt:127)
	at org.jetbrains.exposed.sql.Database$Companion$doConnect$3.invoke(Database.kt:128)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManager$ThreadLocalTransaction$connectionLazy$1.invoke(ThreadLocalTransactionManager.kt:69)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManager$ThreadLocalTransaction$connectionLazy$1.invoke(ThreadLocalTransactionManager.kt:68)
	at kotlin.UnsafeLazyImpl.getValue(Lazy.kt:81)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManager$ThreadLocalTransaction.getConnection(ThreadLocalTransactionManager.kt:75)
	at org.jetbrains.exposed.sql.Transaction.getConnection(Transaction.kt)
	at org.jetbrains.exposed.sql.vendors.VendorDialect.tableExists(Default.kt:685)
	at org.jetbrains.exposed.sql.QueriesKt.exists(Queries.kt:236)
	at org.jetbrains.exposed.sql.SchemaUtils.createStatements(SchemaUtils.kt:89)
	at org.jetbrains.exposed.sql.SchemaUtils.create(SchemaUtils.kt:233)
	at org.jetbrains.exposed.sql.SchemaUtils.create$default(SchemaUtils.kt:231)
	at MainKt$main$1.invoke(main.kt:50)
	at MainKt$main$1.invoke(main.kt:46)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.inTopLevelTransaction$run(ThreadLocalTransactionManager.kt:189)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.access$inTopLevelTransaction$run(ThreadLocalTransactionManager.kt:1)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt$inTopLevelTransaction$1.invoke(ThreadLocalTransactionManager.kt:215)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.keepAndRestoreTransactionRefAfterRun(ThreadLocalTransactionManager.kt:223)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.inTopLevelTransaction(ThreadLocalTransactionManager.kt:214)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt$transaction$1.invoke(ThreadLocalTransactionManager.kt:165)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.keepAndRestoreTransactionRefAfterRun(ThreadLocalTransactionManager.kt:223)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.transaction(ThreadLocalTransactionManager.kt:135)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.transaction(ThreadLocalTransactionManager.kt:132)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.transaction$default(ThreadLocalTransactionManager.kt:131)
	at MainKt.main(main.kt:46)
Caused by: java.lang.IllegalStateException: The write format 2 is larger than the supported format 1, and the file was not opened in read-only mode [1.4.200/5]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:950)
	at org.h2.mvstore.MVStore.readStoreHeader(MVStore.java:741)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:396)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:3579)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:170)
	... 43 common frames omitted
09:39:33.429 [main] WARN  Exposed - Transaction attempt #1 failed: File corrupted while reading record: null. Possible solution: use the recovery tool [90030-200]. Statement(s): null
org.h2.jdbc.JdbcSQLNonTransientConnectionException: File corrupted while reading record: null. Possible solution: use the recovery tool [90030-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.mvstore.db.MVTableEngine$Store.convertIllegalStateException(MVTableEngine.java:222)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:182)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:103)
	at org.h2.engine.Database.getPageStore(Database.java:2659)
	at org.h2.engine.Database.open(Database.java:675)
	at org.h2.engine.Database.openDatabase(Database.java:307)
	at org.h2.engine.Database.<init>(Database.java:301)
	at org.h2.engine.Engine.openSession(Engine.java:74)
	at org.h2.engine.Engine.openSession(Engine.java:192)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:171)
	at org.h2.engine.Engine.createSession(Engine.java:166)
	at org.h2.engine.Engine.createSession(Engine.java:29)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:340)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:173)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:677)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:228)
	at org.jetbrains.exposed.sql.Database$Companion$connect$10.invoke(Database.kt:206)
	at org.jetbrains.exposed.sql.Database$Companion$connect$10.invoke(Database.kt:206)
	at org.jetbrains.exposed.sql.Database$Companion$doConnect$3.invoke(Database.kt:127)
	at org.jetbrains.exposed.sql.Database$Companion$doConnect$3.invoke(Database.kt:128)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManager$ThreadLocalTransaction$connectionLazy$1.invoke(ThreadLocalTransactionManager.kt:69)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManager$ThreadLocalTransaction$connectionLazy$1.invoke(ThreadLocalTransactionManager.kt:68)
	at kotlin.UnsafeLazyImpl.getValue(Lazy.kt:81)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManager$ThreadLocalTransaction.getConnection(ThreadLocalTransactionManager.kt:75)
	at org.jetbrains.exposed.sql.Transaction.getConnection(Transaction.kt)
	at org.jetbrains.exposed.sql.vendors.VendorDialect.tableExists(Default.kt:685)
	at org.jetbrains.exposed.sql.QueriesKt.exists(Queries.kt:236)
	at org.jetbrains.exposed.sql.SchemaUtils.createStatements(SchemaUtils.kt:89)
	at org.jetbrains.exposed.sql.SchemaUtils.create(SchemaUtils.kt:233)
	at org.jetbrains.exposed.sql.SchemaUtils.create$default(SchemaUtils.kt:231)
	at MainKt$main$1.invoke(main.kt:50)
	at MainKt$main$1.invoke(main.kt:46)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.inTopLevelTransaction$run(ThreadLocalTransactionManager.kt:189)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.access$inTopLevelTransaction$run(ThreadLocalTransactionManager.kt:1)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt$inTopLevelTransaction$1.invoke(ThreadLocalTransactionManager.kt:215)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.keepAndRestoreTransactionRefAfterRun(ThreadLocalTransactionManager.kt:223)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.inTopLevelTransaction(ThreadLocalTransactionManager.kt:214)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt$transaction$1.invoke(ThreadLocalTransactionManager.kt:165)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.keepAndRestoreTransactionRefAfterRun(ThreadLocalTransactionManager.kt:223)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.transaction(ThreadLocalTransactionManager.kt:135)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.transaction(ThreadLocalTransactionManager.kt:132)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.transaction$default(ThreadLocalTransactionManager.kt:131)
	at MainKt.main(main.kt:46)
Caused by: java.lang.IllegalStateException: The write format 2 is larger than the supported format 1, and the file was not opened in read-only mode [1.4.200/5]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:950)
	at org.h2.mvstore.MVStore.readStoreHeader(MVStore.java:741)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:396)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:3579)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:170)
	... 43 common frames omitted
09:39:33.433 [main] WARN  Exposed - Transaction attempt #2 failed: File corrupted while reading record: null. Possible solution: use the recovery tool [90030-200]. Statement(s): null
org.h2.jdbc.JdbcSQLNonTransientConnectionException: File corrupted while reading record: null. Possible solution: use the recovery tool [90030-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.mvstore.db.MVTableEngine$Store.convertIllegalStateException(MVTableEngine.java:222)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:182)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:103)
	at org.h2.engine.Database.getPageStore(Database.java:2659)
	at org.h2.engine.Database.open(Database.java:675)
	at org.h2.engine.Database.openDatabase(Database.java:307)
	at org.h2.engine.Database.<init>(Database.java:301)
	at org.h2.engine.Engine.openSession(Engine.java:74)
	at org.h2.engine.Engine.openSession(Engine.java:192)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:171)
	at org.h2.engine.Engine.createSession(Engine.java:166)
	at org.h2.engine.Engine.createSession(Engine.java:29)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:340)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:173)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:677)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:228)
	at org.jetbrains.exposed.sql.Database$Companion$connect$10.invoke(Database.kt:206)
	at org.jetbrains.exposed.sql.Database$Companion$connect$10.invoke(Database.kt:206)
	at org.jetbrains.exposed.sql.Database$Companion$doConnect$3.invoke(Database.kt:127)
	at org.jetbrains.exposed.sql.Database$Companion$doConnect$3.invoke(Database.kt:128)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManager$ThreadLocalTransaction$connectionLazy$1.invoke(ThreadLocalTransactionManager.kt:69)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManager$ThreadLocalTransaction$connectionLazy$1.invoke(ThreadLocalTransactionManager.kt:68)
	at kotlin.UnsafeLazyImpl.getValue(Lazy.kt:81)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManager$ThreadLocalTransaction.getConnection(ThreadLocalTransactionManager.kt:75)
	at org.jetbrains.exposed.sql.Transaction.getConnection(Transaction.kt)
	at org.jetbrains.exposed.sql.vendors.VendorDialect.tableExists(Default.kt:685)
	at org.jetbrains.exposed.sql.QueriesKt.exists(Queries.kt:236)
	at org.jetbrains.exposed.sql.SchemaUtils.createStatements(SchemaUtils.kt:89)
	at org.jetbrains.exposed.sql.SchemaUtils.create(SchemaUtils.kt:233)
	at org.jetbrains.exposed.sql.SchemaUtils.create$default(SchemaUtils.kt:231)
	at MainKt$main$1.invoke(main.kt:50)
	at MainKt$main$1.invoke(main.kt:46)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.inTopLevelTransaction$run(ThreadLocalTransactionManager.kt:189)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.access$inTopLevelTransaction$run(ThreadLocalTransactionManager.kt:1)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt$inTopLevelTransaction$1.invoke(ThreadLocalTransactionManager.kt:215)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.keepAndRestoreTransactionRefAfterRun(ThreadLocalTransactionManager.kt:223)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.inTopLevelTransaction(ThreadLocalTransactionManager.kt:214)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt$transaction$1.invoke(ThreadLocalTransactionManager.kt:165)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.keepAndRestoreTransactionRefAfterRun(ThreadLocalTransactionManager.kt:223)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.transaction(ThreadLocalTransactionManager.kt:135)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.transaction(ThreadLocalTransactionManager.kt:132)
	at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.transaction$default(ThreadLocalTransactionManager.kt:131)
	at MainKt.main(main.kt:46)
Caused by: java.lang.IllegalStateException: The write format 2 is larger than the supported format 1, and the file was not opened in read-only mode [1.4.200/5]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:950)
	at org.h2.mvstore.MVStore.readStoreHeader(MVStore.java:741)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:396)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:3579)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:170)
	... 43 common frames omitted
09:45:54.484 [main] DEBUG Exposed - INSERT INTO Cities ("name") VALUES ('St. Petersburg')
09:52:42.480 [main] DEBUG Exposed - INSERT INTO Cities ("name") VALUES ('St. Petersburg')
